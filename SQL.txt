INSERT INTO questions (question, answers, correct, questionid)
VALUES ('The rate at which an algorithm grows, relative to the size of its input, is ___ runtime.',
	   '{asymptotic, exponential, quadratic, polynomial}',
		'asymptotic',
		1),
		('An algorithm in which the total runtime is proportional to the number of items to be processed is a ___ algorithm.',
	   '{controlled, linear, python, mathematical}',
		'linear',
		2),
				('A ___ represents the power to which a base number must be raised to produce a specified value.',
	   '{logarithm, transliteration, hypotenuse, derivative}',
		'logarithm',
		3),
        ('Which of the following is an example of quadratic time?',
	   '{O(n!), O(n log n), O(log n), O(n^2)}',
		'O(n^2)',
		4),
        ('An algorithm in which the runtime is proportional to the size of the input raised to some power is a ___ algorithm',
	   '{exponential, infinite, polynomial, rubic}',
		'polynomial',
		5),
        ('Time raised to the 4th power is ___ time',
	   '{quartic, quadratic, quadrate, O(n^4)}',
		'quartic',
		6),
        ('The number of operations in a/an ___ algorithm is binded by a constant raised to the size of the input.',
	   '{immense, factorial, triumvirate, exponential}',
		'exponential',
		7),
        ('Given a sorted array, binary search has an ___ expected worst-case runtime.',
	   '{O(n), O(1), O(log n), O (m * n)}',
		'O(log n)',
		8),
        ('Which is an example of factorial runtime?',
	   '{O(n!), O(n log n), O(n^2), O(n-1)}',
		'O(n!)',
		9),
        ('A collection of elements indexed by a key and stored sequentially is a/an ___.',
	   '{array, construct, heap, stack}',
		'array',
		10),
		 ('A data structure in which every element contains both data and a pointer to the next element in a ___.',
	   '{heap, array, linked-list, treap}',
		'linked-list',
		11),
		('A double-linked list has a pointer to the next element and the ___ element.',
	   '{secondary, first, previous, last}',
		'previous',
		12),
	 	('A ___ is a last-in, first-out data structure in which element are only removed from the top.',
	   '{trie, binary tree, stack, heap}',
		'stack',
		13),
		('Which are two basic operations that can be performed on a stack?',
	   '{Push/Pop, Lift/Sort, Reduce/Find, Shift/Unshift}',
		'Push/Pop',
		14),
		('A stack ___ allows for random access.',
	   '{sometimes, always, partly, never}',
		'never',
		15),
		('A heap is a partially-ordered data structure based on the key of each element, such that the highest or lowest-priority element is always stored at the ___.',
	   '{branch, source, root, node}',
		'root',
		16),
		('A ___ is a data structure in which each value of each node is no smaller than the value of its parent.',
	   '{max-heap, red/black-tree, min-heap, heap}',
		'min-heap',
		17),
		('A max-heap is a data structure in which each value of each node is ___ than the value of its parent.',
	   '{<=, equal, >=, not-equal}',
		'<=',
		18),
		('A ___ is a data structure that implements an associative array which can map keys to values.',
	   '{cryptogram, queue, hash-table, stack}',
		'hash-table',
		19),
		('An unordered collection of unique values is called a/an ___.',
	   '{assortment, set, gallery, series}',
		'set',
		20),
		('A ___ polynomial algorithm computes the correct solution to a problem in polynomial time, but can exhibit different behaviors for the same input.',
	   '{reflexive, polar, non-deterministic, non-standard}',
		'non-deterministic',
		21),
		('A path through a graph which uses every edge exactly once is a ___ path.',
	   '{Eulerian, Pythagorean, Parmenidean, Milesian}',
		'Eulerian',
		22),
		('Vertices on a graph are also known as ___.',
	   '{edges, planes, nodes, spans}',
		'nodes',
		23),
		('A ___ graph contains every possible edge between its vertices.',
	   '{intricate, complex, complete, multiplex}',
		'complete',
		24),
		('In an acyclic graph it is ___ to find a path that begins and ends at the same vertex.',
	   '{possible, equivocal, computable, impossible}',
		'impossible',
		25),
		('A ___ is a connected graph in which there are no cycles.',
	   '{tree, regular-graph, cartograph, parabola}',
		'tree',
		26),
		('The ___ of a tree does not have any children.',
	   '{leaf-node, external-node, exosphere, vertex}',
		'leaf-node',
		27),
		('A binary tree has (at-most) ___ children.',
	   '{ten, two, four, three}',
		'two',
		28),
		('In a binary-search tree, the key of the root is ___ its left child.',
	   '{>=, <=, >, <}',
		'>=',
		29),
		('A red-black tree is a/an ___ tree where all of the keys are stored in internal nodes, and all of the leaves are null nodes.',
	   '{ternary, splay, unbalanced, binary-search}',
		'binary-search',
		30),
		('A ___ is a multi-way tree built based on a prefix of strings.',
	   '{trie, treap, AVL-tree, B-tree}',
		'trie',
		31),
		('In ___ search, we first explore all vertices adjacent to the root before searching others.',
	   '{breadth-first, depth-first, pattern, domain}',
		'breadth-first',
		32),
		('___ Search first explores one node adjacent to the root and a path though its children, then explores other adjacent nodes.',
	   '{Breadth-First, MST, Depth-First, Linear}',
		'Depth-First',
		33),
		('Who designed an algorithm in which nodes are inserted into a priority queue based on their known distance from a source vertex?',
	   '{Leibniz, Dijkstra, Turing, Heidegger}',
		'Dijkstra',
		34),
		('Given an array, bubble-sort compares each pair of ___ values and swaps them if they are out of order.',
	   '{prime, opposing, equivalent, adjacent}',
		'adjacent',
		35),
		('Which type of sort works iteratively on an array by shifting sorted values in order to insert new values?',
	   '{interjection, insertion, interpolation, extradition}',
		'insertion',
		36),
		('___ divides an an input into sorted and unsorted regions, then iteratively moves elements to the sorted region.',
	   '{heapsort, mergesort, bubble-sort, linear-sort}',
		'heapsort',
		37),
		('___ divides an array into smaller, sorted arrays, then combines these arrays into a final sorted list.',
	   '{quicksort, heapsort, quantum-sort, mergesort}',
		'mergesort',
		38),
		('___ is a sorting method that selects a pivot-position in an array, and arranges all elements either to the left or right of the pivot depending on their values.',
	   '{Mergesort, Quicksort, Heapsort, Treesort}',
		'Quicksort',
		39),
		('Counting-sort builds a ___ of key appearance frequencies, then iterates through an array to place the first element of each key into its sorted position.',
	   '{graph, pareto-chart, pentogram, histogram}',
		'histogram',
		40),
		('___ works iteratively on an array to place items into buckets according to their least significant digit. This process is repeated through each digit of each item until a pass has been made through all digits.',
	   '{Bubble-sort, Radix-sort, Heapsort, Stacksort}',
		'Radix-sort',
		41),
		('In the object-oriented programming paradigm, every object is an instance of a ___.',
	   '{class, set, function, variable}',
		'class',
		42),
		('___ is a pillar of object-oriented programming which states that variables and methods are grouped inside their associated object, in order to prevent the client from directly accessing the data of the object.',
	   '{Polymorphism, SOAP, Encapsulation, REST}',
		'Encapsulation',
		43),
		('In the object-oriented programming paradigm, the process of omitting unnecessary details from an object or class in order to maintain just the essential characteristics for problem solving, is called ___.',
	   '{encapsultation, orientation, abstraction, division}',
		'abstraction',
		44),
		('___ is one of the pillars of object-oriented programming, defined as the ability to always present the same interface, despite different underlying forms or data types.',
	   '{Polymorphism, Encapsulation, Abstraction, Inheritance}',
		'Polymorphism',
		45),
		('The Inheritance pillar of object-oriented programming states that a ___ will inherit the variables and methods from its parent.',
	   '{root, cousin, child, sibling}',
		'child',
		46),
		('Which of the following is NOT a principle of REST?',
	   '{single-layer, client-server, cacheable, stateless}',
		'single-layer',
		47),
		('A ___ database organizes data into trees rather than tables.',
	   '{multi-way, relational, hierarchical, tree-based}',
		'hierarchical',
		48),
		('Which of the following is a method of problem solving which relies on functions which call themselves and a base case?',
	   '{refactory, looping, brute-force, recursion}',
		'recursion',
		49),
		('___ Time is a concept which considers the time-complexity of an algorithm at both its worst-case runtime and its normal runtime.',
	   '{Elliptical, Asymptotic, Amortized, Acyclic}',
		'Amortized',
		50),
		('A ___ database is organized into a set of related tables which can be combined using keys.',
	   '{relational, complex, hierarchical, SOAP}',
		'relational',
		0);



